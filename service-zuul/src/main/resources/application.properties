#server
server.port=8711
spring.http.multipart.enabled=true
#\u8BBE\u7F6E\u5355\u4E2A\u6587\u4EF6\u7684\u5927\u5C0F\uFF0C\u9ED8\u8BA41M\uFF0C\u5982\u679C\u4E0D\u9650\u5236\u914D\u7F6E\u4E3A-1
spring.http.multipart.max-file-size=100MB
#\u8BBE\u7F6E\u6700\u5927\u7684\u8BF7\u6C42\u6587\u4EF6\u7684\u5927\u5C0F\uFF0C\u9ED8\u8BA410M,\u5982\u679C\u4E0D\u9650\u5236\u914D\u7F6E\u4E3A-1
spring.http.multipart.max-request-size=100MB
#\u5F53\u4E0A\u4F20\u6587\u4EF6\u8FBE\u52301MB\u7684\u65F6\u5019\u8FDB\u884C\u78C1\u76D8\u5199\u5165
spring.http.multipart.file-size-threshold=1MB
spring.http.multipart.location=/
#resolveLazily \u662F\u5224\u65AD\u662F\u5426\u8981\u5EF6\u8FDF\u89E3\u6790\u6587\u4EF6\uFF08\u901A\u8FC7XML\u53EF\u4EE5\u8BBE\u7F6E\uFF09\u3002\u5F53 resolveLazily \u4E3A flase \u65F6\uFF0C\u4F1A\u7ACB\u5373\u8C03\u7528 parseRequest() \u65B9\u6CD5\u5BF9\u8BF7\u6C42\u6570\u636E\u8FDB\u884C\u89E3\u6790\uFF0C\u7136\u540E\u5C06\u89E3\u6790\u7ED3\u679C\u5C01\u88C5\u5230 DefaultMultipartHttpServletRequest \u4E2D\uFF1B\u800C\u5F53 resolveLazily \u4E3A true \u65F6\uFF0C\u4F1A\u5728 DefaultMultipartHttpServletRequest \u7684 initializeMultipart() \u65B9\u6CD5\u8C03\u7528 parseRequest() \u65B9\u6CD5\u5BF9\u8BF7\u6C42\u6570\u636E\u8FDB\u884C\u89E3\u6790\uFF0C\u800C initializeMultipart() \u65B9\u6CD5\u53C8\u662F\u88AB getMultipartFiles() \u65B9\u6CD5\u8C03\u7528\uFF0C\u5373\u5F53\u9700\u8981\u83B7\u53D6\u6587\u4EF6\u4FE1\u606F\u65F6\u624D\u4F1A\u53BB\u89E3\u6790\u8BF7\u6C42\u6570\u636E\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u7528\u4E86\u61D2\u52A0\u8F7D\u7684\u601D\u60F3\u3002
spring.http.multipart.resolve-lazily=true
#application
spring.application.name=service-zuul
#eureka
eureka.client.service-url.defaultZone=http://localhost:1110/eureka,http://svr1:1111/eureka,http://svr2:1112/eureka
eureka.instance.prefer-ip-address=true
#zuul
zuul.ignored-services=*
##zuul.strip-prefix=false\u65F6\uFF0C/api/feign/**\u5982\u679C\u4F7F\u7528/api/feign\u4E3A\u524D\u7F00\u7684\u8BF7\u6C42\uFF0C\u540E\u9762\u670D\u52A1\u7684api\u4E3A/**
zuul.strip-prefix=true
zuul.prefix=/api
zuul.routes.api-ribbon=/ribbon/**
#/api/feign/**\u7684\u8BF7\u6C42\u4F1A\u8F6C\u53D1\u5230\u6CE8\u518C\u5230Eureka\u4E0A\u7684\u670D\u52A1\u540D\u4E3Afeign-consumer\u7684/**\u63A5\u53E3\u4E0A
zuul.routes.feign-consumer=/feign/**
#Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: feign
#\u4E0B\u9762\u8FD9\u4E2A\u914D\u7F6E\u76F8\u5F53\u4E8E\u7ED9\u670D\u52A1\u914D\u7F6E\u4E86Alias
#zuul.routes.api-feign.service-id=feign
zuul.ribbon-isolation-strategy=thread
#\u5F00\u542F\u9965\u997F\u52A0\u8F7D\u3002\u9ED8\u8BA4\u662F\u201C\u61D2\u201D\u52A0\u8F7D\uFF0C\u7B2C\u4E00\u6B21\u7ECF\u8FC7zuul\u7684\u8C03\u7528\u4F1A\u53BB\u6CE8\u518C\u4E2D\u5FC3\u8BFB\u53D6\u670D\u52A1\u6CE8\u518C\u8868\uFF0C\u521D\u59CB\u5316ribbon\u8D1F\u8F7D\u4FE1\u606F\uFF0C\u8FD9\u79CD\u61D2\u52A0\u8F7D\u7B56\u7565\u4F1A\u5BFC\u81F4\u8BF7\u6C42\u8D85\u65F6
ribbon.eager-load.enabled=true
zuul.sensitive-headers=Authorization
#log
logging.level.com.netflix=debug
#\u53BB\u6389\u8EAB\u4EFD\u8BA4\u8BC1\uFF0C\u65B9\u4FBF\u8C03\u8BD5
management.security.enabled=false


